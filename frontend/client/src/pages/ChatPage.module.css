.chatPageContainer {
    display: flex;
    height: calc(100vh - 60px); /* Assuming navbar height is 60px */
    /* background-color: #f8f9fa; */ /* Handled by inline style */
    position: relative;
    overflow: hidden; /* Prevent scrollbars caused by transitions */
}

.chatSidebar {
    /* background-color: #ffffff; */ /* Handled by inline style */
    border-right: 1px solid #dee2e6;
    flex-shrink: 0;
    width: 280px;
    min-width: 280px; /* Desktop default width */
    padding: 15px;
    /* Use transform for visibility transition */
    transition: transform 0.3s ease-in-out;
    overflow-y: auto; /* Allow scrolling if content overflows */
    overflow-x: hidden;
    white-space: nowrap;
    /* Ensure it starts hidden if needed, or visible based on initial state */
    transform: translateX(0); /* Assume visible by default unless hidden class is applied */
}

.chatSidebarHidden {
    /* Hide by translating off-screen */
    transform: translateX(-100%);
    /* Remove width/padding overrides as transform handles hiding */
    /* Keep border/overflow overrides if necessary */
    min-width: 0; /* Still needed to allow shrinking */
    padding: 0 15px 0 0; /* Adjust padding during transition if needed, or keep 0 */
    border-right: none;
    overflow: hidden;
}

.mainChatArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    padding: 20px;
    position: relative; /* Needed for absolute positioning of toggle button */
    overflow-y: auto; /* Allow messages to scroll */
}

/* Style for the copy button when placed inside the bubble */
.copyButtonInside {
    position: absolute;
    bottom: 8px; /* Adjusted */
    right: 8px; /* Adjusted */
    z-index: 1;
    opacity: 0.6; /* Slightly visible for discoverability */
    transition: opacity 0.2s ease-in-out;
    background-color: rgba(0,0,0,0.1); /* Subtle background */
    border-radius: 4px;
    padding: 2px 4px;
    color: var(--text-secondary-color);
}

.copyButtonInside:hover {
    opacity: 1;
    background-color: rgba(0,0,0,0.2);
}

.messageList {
    flex: 1;
    overflow-y: auto;
    margin-bottom: 15px;
    padding: 10px;
    /* background-color handled by inline style */
}

.inputForm {
    margin-top: auto;
    padding-top: 15px;
    border-top: 1px solid var(--border-color-subtle);
}

.inputControls {
    display: flex;
    /* align-items: center; Will be controlled by elevated state */
    gap: 0px; /* Removed gap */
    padding: 8px;
    background-color: var(--surface-color); 
    border: 1px solid var(--input-border);
    border-radius: 24px; 
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    transition: border-color 0.3s ease, background-color 0.3s ease, flex-direction 0.1s ease, align-items 0.1s ease;
    
    /* Default to row for the non-elevated state, and center items vertically */
    /* flex-direction: row; */ /* No longer default, always column */
    /* align-items: center; */ /* No longer default, always stretch for column */
    flex-direction: column; /* Textarea on top, icon row below */
    align-items: stretch; /* Allow textarea to take full width */
}

/* .inputControls:not(.inputControlsElevated) .iconRow {
    align-items: center; 
} */ /* This rule can be removed or commented out */
/* .inputControls.inputControlsElevated class is no longer needed */

.iconRow {
    display: flex;
    align-items: center; /* Vertically center all children */
    width: 100%;
    /* gap: 8px; */ /* Gap will be handled by groups or space-between */
    flex-wrap: nowrap; /* Prevent wrapping of items */
    justify-content: space-between; /* Push left and right groups apart */
}

.iconGroupLeft {
    display: flex;
    align-items: center;
    gap: 8px; /* Spacing within the left group of icons */
}

.iconGroupRight {
    display: flex;
    align-items: center;
    gap: 8px; /* Spacing within the right group of icons */
}

.inputControls:focus-within {
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 2px var(--input-focus-shadow);
}

.fileUploadButton, .micButton, .sendButton, .reasoningToggle { /* Common class for icon buttons */
    background: transparent;
    border: none;
    color: var(--text-secondary-color);
    cursor: pointer;
    padding: 8px; /* Consistent padding */
    border-radius: 50%; /* Circular buttons */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5em; /* Icon size */
    transition: color 0.2s ease, background-color 0.2s ease;
    flex-shrink: 0;
    width: 40px; /* Fixed width */
    height: 40px; /* Fixed height */
    margin: 0; /* Remove default margins */
}

.fileUploadButton:hover, .micButton:hover, .sendButton:not(:disabled):hover, .reasoningToggle:hover {
    color: var(--primary-color);
    background-color: var(--accent-background-color); /* Subtle hover background */
}

.fileUploadButton:disabled, .micButton:disabled, .sendButton:disabled, .reasoningToggle:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background-color: transparent;
}

.fileName {
    font-size: 0.8em;
    color: var(--text-secondary-color);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100px;
    flex-shrink: 0;
    align-self: center; /* Align with other buttons if textarea is multi-line */
}

.fileNamePreview { /* Style for file name in preview */
    font-size: 0.9em;
    color: var(--text-secondary-color);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 150px;
}

.clearPreviewButton {
    position: absolute;
    top: -5px;
    right: -5px;
    background: var(--surface-color);
    color: var(--text-secondary-color);
    border: 1px solid var(--border-color);
    border-radius: 50%;
    width: 20px;
    height: 20px;
    font-size: 14px;
    line-height: 18px; /* Adjust for border */
    text-align: center;
    cursor: pointer;
    padding: 0;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.clearPreviewButtonSmall {
    background: var(--surface-color);
    color: var(--text-secondary-color);
    border: 1px solid var(--border-color);
    border-radius: 50%;
    width: 16px;
    height: 16px;
    font-size: 12px;
    line-height: 14px; /* Adjust for border */
    text-align: center;
    cursor: pointer;
    padding: 0;
}

/* Mic glow animation */
@keyframes micGlow {
  0% { box-shadow: 0 0 3px 1px var(--primary-color); opacity: 0.7; }
  50% { box-shadow: 0 0 8px 3px var(--primary-color); opacity: 1; }
  100% { box-shadow: 0 0 3px 1px var(--primary-color); opacity: 0.7; }
}

.micButtonListening {
  animation: micGlow 1.5s infinite ease-in-out;
  background-color: var(--accent-background-color) !important; /* Ensure it overrides hover */
  color: var(--primary-color) !important;
}

.messageInput {
    /* flex: 1; */ /* Removed to allow natural height based on content and rows attribute */
    padding: 8px 15px 4px 15px; /* Reduced bottom padding from 8px to 4px */
    border-radius: 20px; /* Keep rounded for inner input */
    border: none; /* Remove border, parent .inputControls has it */
    font-size: 1rem;
    background-color: transparent; /* Inherit from .inputControls */
    color: var(--text-color);
    resize: none; 
    line-height: 1.5;
    outline: none; 
    max-height: 150px; 
    overflow-y: auto;
    margin: 0; /* Remove default margins */
    width: 100%; /* Ensure it takes full width in the column layout */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
    /* margin-bottom: 8px; */ /* Removed to reduce space, parent .inputControls has a gap */
}

/* .elevatedTextarea class is no longer needed, styles merged or adapted into .messageInput */

.messageInput::placeholder {
    color: var(--text-secondary-color);
    opacity: 0.7;
}

.sendButton {
    /* Styles inherited from .iconButton common class */
    background-color: var(--button-primary-bg) !important; /* Important to override transparent */
    color: var(--text-on-primary-color) !important;
}

.sendButton:hover:not(:disabled) {
    background-color: var(--button-primary-hover-bg) !important;
    color: var(--text-on-primary-color) !important;
}

.sendButton:disabled {
    background-color: var(--border-color-subtle) !important; /* More subtle disabled state */
    color: var(--text-secondary-color) !important;
    opacity: 0.7;
}

/* Base Message Styling */
.messageRow {
    display: flex;
    margin-bottom: 12px;
    align-items: flex-end;
}
.messageRowUser {
    justify-content: flex-end;
}
.messageRowAi {
     justify-content: flex-start;
     /* Add vertical stacking and adjust alignment for AI rows */
     flex-direction: column;
     align-items: stretch; /* Stretch items like details/bubble wrapper */
}
.messageBubble {
    padding: 10px 15px;
    border-radius: 15px;
    max-width: 75%; /* Default max width */
    word-wrap: break-word;
    position: relative; /* Needed for absolute positioning of the copy button */
    padding: 10px 35px 10px 15px; /* Add padding for the button */
}

.fileLink { /* Style for file download links in messages */
    text-decoration: none;
    font-weight: 500;
}
.fileLink:hover {
    text-decoration: underline;
}

/* Show copy button on bubble hover/focus */
.messageBubble:hover .copyButtonInside,
.messageBubble:focus-within .copyButtonInside {
    opacity: 1;
}
.messageBubbleUser {
    background-color: #007bff;
    color: white;
}
.messageBubbleAi {
     background-color: #e9ecef;
     color: #343a40;
}

/* Sidebar List Item Base Styles (if needed) */
.sessionListItem {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 12px;
    cursor: pointer;
    margin-bottom: 5px;
    border-radius: 5px;
    background-color: transparent; /* Default */
    color: #495057; /* Default */
    transition: background-color 0.2s ease; /* Add transition */
}
.sessionListItem:hover {
    background-color: #f1f3f5; /* Light hover */
}
.sessionListItemActive {
    background-color: #e9ecef; /* Light active */
}
.sessionTitle {
    flex-grow: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 10px;
}
.deleteSessionButton {
    background: none;
    border: none;
    color: #dc3545;
    cursor: pointer;
    font-size: 1.1em;
    padding: 0 5px;
    line-height: 1;
    flex-shrink: 0;
}
.newChatButton { /* Style for the new chat button */
    flex-grow: 1;
    margin-right: 10px;
    padding: 10px 15px;
    font-size: 1rem;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}


/* --- Dark Mode Styles --- */
body.dark .chatPageContainer {
    /* background-color: #1a1a1a; */ /* Handled by inline style */
    color: #e0e0e0;
}

body.dark .chatSidebar {
    /* background-color: #2a2a2a; */ /* Remove - will be handled by inline style */
    border-right-color: #444;
    color: #ccc; /* Adjust text color */
}

/* Ensure hidden sidebar is also dark */
body.dark .chatSidebarHidden {
     /* background-color: #2a2a2a; */ /* Handled by inline style */
     border-right: none;
}

body.dark .chatSidebar h4 {
    color: #e0e0e0; /* Dark mode heading color */
}

body.dark .chatSidebar li {
    color: #ccc; /* Dark mode list item text */
}

body.dark .chatSidebar li span:hover {
     color: #fff;
}

/* Use class for active item */
body.dark .sessionListItemActive {
    background-color: #3a3d41; /* Darker selection background */
    color: #fff;
}
body.dark .sessionListItem:hover {
    background-color: #343a40; /* Dark hover */
}
body.dark .deleteSessionButton {
    color: #ff6b6b; /* Lighter red */
}
body.dark .newChatButton {
     background-color: #0d6efd;
 }
 
 /* New style for the close button next to the Chat History title */
 .sidebarHeaderCloseButton {
     background: none;
     border: none;
     color: #6c757d; /* Subdued color */
     cursor: pointer;
     font-size: 1.3em;
     padding: 0 5px;
     line-height: 1;
     transition: color 0.2s ease;
 }
 .sidebarHeaderCloseButton:hover {
     color: #343a40; /* Darken on hover */
 }
 
 body.dark .sidebarHeaderCloseButton {
     color: #aaa; /* Lighter subdued color for dark mode */
 }
 
 body.dark .sidebarHeaderCloseButton:hover {
     color: #eee; /* Lighten on hover */
 }
 
 body.dark .mainChatArea {
     /* Background is inherited from container */
}

body.dark .sidebarToggleButton { /* Keep original style for button inside sidebar */
    background: #444;
    border-color: #666;
    color: #eee;
 }
 
 /* Removed dark mode styles for floating hidden button */
 

body.dark .mainChatArea h3 {
    color: #e0e0e0; /* Dark mode header */
}

body.dark .mainChatArea a {
    color: #64b5f6;
}

/* Remove attribute selector for share link box - style directly if needed or add class */
/* body.dark .mainChatArea [style*="background: rgb(240, 240, 240)"] { ... } */


body.dark .messageList {
    /* background: #2a2a2a; */ /* Handled by inline style */
    border-color: #444;
}

/* Message Bubbles - Dark mode styles */
body.dark .messageBubbleUser {
    background-color: #0d6efd; /* Adjusted blue */
    color: white;
}
body.dark .messageBubbleAi {
    background-color: #3a3d41;
    color: #e0e0e0;
}
/* Force SyntaxHighlighter background to be transparent in dark mode */
body.dark .messageBubbleAi pre {
    background: transparent !important;
    background-color: transparent !important;
}


body.dark .inputForm {
    border-top-color: #444;
}

/* Styles for .modelSelectWrapper, .modelSelectIcon, .modelSelectDropdown were removed as they are no longer used */

body.dark .inputControls label { /* Keep label style if used elsewhere */
    color: #bbb;
}

body.dark .fileUploadButton {
    background: #444;
    border-color: #666;
    color: #eee; /* Icon color */
}
body.dark .fileName {
    color: #bbb;
}
body.dark .messageInput {
    background-color: #3a3d41;
    border-color: #555;
    color: #e0e0e0;
}
body.dark .sendButton {
     background-color: #0d6efd;
}
body.dark .sendButton:hover:not(:disabled) {
    background-color: #0a58ca;
}
body.dark .sendButton:disabled {
    background-color: #495057;
}
.sidebarToggleButton {
    /* Removed absolute positioning */
    /* top: 15px; */
    /* left: 295px; */
    /* z-index: 25; */ /* May not be needed now */
    background: #eee;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 5px 8px;
    cursor: pointer;
     transition: left 0.3s ease-in-out;
 }
 
 /* Removed .sidebarToggleButtonHidden rule */
 
 /* Removed .sidebarToggleButtonHidden:hover rule */
 
 /* --- Mobile Styles --- */
@media (max-width: 767px) {
    .chatSidebar {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        z-index: 20;
        width: 85%; /* Mobile width when open */
        min-width: auto; /* Override desktop min-width */
        border-right: none;
        box-shadow: 2px 0 5px rgba(0,0,0,0.1);
        transform: translateX(-100%); /* Hidden by default */
    }

    .chatSidebarVisible {
        transform: translateX(0); /* Slide in */
    }

    /* Remove hidden styles based on width for mobile, rely on transform */
    .chatSidebarHidden {
        width: 85%; /* Keep width for transition */
        min-width: auto;
        padding: 15px; /* Keep padding for content */
        border-right: none;
        overflow-y: auto;
        transform: translateX(-100%);
    }

    .mainChatArea {
        margin-left: 0 !important; /* Ensure no margin push */
        width: 100%; /* Take full width */
        padding: 10px; /* Reduce padding for more fullscreen feel */
    }

    /* Adjustments for the button *inside* the sidebar on mobile */
    .chatSidebarVisible .sidebarToggleButton { /* Target button only when sidebar is visible */
       /* Reset potentially inherited absolute styles if needed */
       position: relative;
       top: auto;
       left: auto;
       z-index: auto;
    }

     /* Removed mobile styles for .sidebarToggleButtonHidden */
 
     /* Adjust message bubble max-width for smaller screens */
    /* This would ideally go into a separate message bubble component CSS */
    /* Example: */
    /* .messageBubble { max-width: 85%; } */

    .inputControls {
        gap: 5px; /* Reduce gap */
    }
    .messageInput {
        padding: 10px 12px;
        min-width: 0; /* Allow input to shrink fully */
    }
    .sendButton {
        padding: 8px 12px; /* Reduce horizontal padding */
    }
    .fileUploadButton {
        padding: 8px; /* Keep padding, maybe adjust size if needed */
    }

    /* Header in Main Chat Area */
    .mainChatArea > div:first-child { 
        margin-left: 0 !important; /* Override desktop inline style */
    }

    .mainChatArea > div:first-child h3 {
        min-width: 0; /* Allow title to shrink */
        overflow-wrap: break-word;
        word-break: break-word; 
    }

    /* Model Selector & Reasoning Toggle Row */
    .inputForm > div:first-child { /* This targets the div holding the dropdown and toggle */
        flex-wrap: nowrap; /* Ensure items stay on one line */
        /* justify-content: space-between; is likely inherited or default for this div */
        /* gap: 8px; */ /* Keep or adjust gap as needed, 10px is default from .inputControls */
    }

    /* Optional: If elements need to shrink to fit */
    /* .inputForm > div:first-child > :first-child { */
    /*   flex-shrink: 1; */
    /*   min-width: 100px; */ /* Example minimum width */
    /* } */
    /* .inputForm .reasoningToggle { */ /* Or target reasoning toggle specifically */
    /*   flex-shrink: 0; */ /* It already has fixed width, so this might not be needed */
    /* } */

    .messageBubble {
        max-width: 85%; /* Ensure this is active for mobile */
    }
}
